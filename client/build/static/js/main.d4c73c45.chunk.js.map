{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Transaction.js","components/Balance.js","components/IncomeExpenses.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","transactions","filter","transaction","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Transaction","useContext","sign","amount","className","text","Math","abs","onClick","Balance","total","map","reduce","accumulator","curVal","toFixed","IncomeExpenses","amounts","income","item","expense","TransactionList","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","for","onChange","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d4c73c45.chunk.js","sourcesContent":["import React from 'react'\n\nexport const Header = () => {\n return (\n  <h2>Expense Tracker</h2>\n )\n}\n","export default (state, action) => {\n  switch (action.type) {\n    case 'DELETE_TRANSACTION':\n      return {\n        ...state,\n        transactions: state.transactions.filter(transaction => transaction.id !== action.payload)\n      }\n      break;\n    case 'ADD_TRANSACTION':\n      return {\n        ...state,\n        transactions: [action.payload, ...state.transactions]\n      }\n      break;\n  default:\n   return state;\n }\n}","import React, { createContext, useReducer } from 'react';\nimport AppReducer from './AppReducer';\n\n\n// This file is used to track the state of the transactions, as that information\n// will need to be updated and subsequently the users total amount.\n\n// Initial State with some dummy data\nconst initialState = {\n transactions: []\n}\n\n// Create Context using built in React function and passing in the initial state\nexport const GlobalContext = createContext(initialState);\n\n// Provider Component allows this global state to be accessesed by the children of this\n// provider component\nexport const GlobalProvider = ({children}) => {\n const [state, dispatch] = useReducer(AppReducer, initialState);\n\n // Actions\n function deleteTransaction(id) {\n  dispatch({\n   type: 'DELETE_TRANSACTION',\n   payload: id\n  });\n }\n\n function addTransaction(transaction) {\n  dispatch({\n   type: 'ADD_TRANSACTION',\n   payload: transaction\n  });\n }\n\n return (\n  <GlobalContext.Provider value={{\n   transactions: state.transactions,\n   deleteTransaction,\n   addTransaction\n  }}>\n   {children}\n  </GlobalContext.Provider>\n );\n}","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\n\nexport const Transaction = ({ transaction }) => {\n\n const { deleteTransaction } = useContext(GlobalContext);\n\n // If the amount is less than 0, its negative otherwise its positive\n const sign = transaction.amount < 0 ? '-' : '+';\n\n return (\n  <div>\n   <li className={transaction.amount < 0 ? 'minus' : 'plus'}>\n    {transaction.text}\n    <span>{sign}${Math.abs(transaction.amount)}</span>\n    <button onClick={()=> deleteTransaction(transaction.id)} className='delete-btn'>x</button>\n   </li>\n  </div>\n )\n}\n","import React, { useContext } from 'react'\nimport { Transaction } from './Transaction';\nimport { GlobalContext } from '../context/GlobalState';\n\nexport const Balance = () => {\n\n const { transactions } = useContext(GlobalContext);\n // maps transaction.amount into an array called amounts\n const amounts = transactions.map(transaction => transaction.amount);\n // reduce function brings all values in the array to 1 value by whateever method\n //  specificed in the method. the 0 is the starting value of the accumulator.\n // toFixed is a function for how many decimal places it goes to\n const total = amounts.reduce((accumulator, curVal) => (accumulator += curVal), 0).toFixed(2);\n return (\n  <div>\n   <h4>Your Balance</h4>\n   <h1>${total}</h1>\n  </div>\n )\n}\n","import React, { useContext } from 'react'\nimport { GlobalContext } from '../context/GlobalState';\n\n\nexport const IncomeExpenses = () => {\n\n const { transactions } = useContext(GlobalContext);\n\n const amounts = transactions.map(transaction => transaction.amount);\n\n const income = amounts.filter(item => item > 0).reduce((accumulator, item) => (accumulator += item), 0).toFixed(2);\n \n const expense = (amounts.filter(item => item < 0).reduce((accumulator, item) => (accumulator += item), 0) * -1).toFixed(2);\n\n return (\n  <div className='inc-exp-container'>\n   <div>\n    <h4>Income</h4>\n    <p id='money-plus' className='money plus'>+ ${income}</p>\n   </div>\n   <div>\n    <h4>Expense</h4>\n    <p id='money-minus' className='money minus'>- ${expense}</p>\n   </div>\n  </div>\n )\n}\n","import React, { useContext } from 'react'\nimport { Transaction } from './Transaction';\nimport { GlobalContext } from '../context/GlobalState';\n\n\nexport const TransactionList = () => {\n \n const { transactions } = useContext(GlobalContext);\n // console.log('context: ', transactions);\n \n return (\n  <div>\n   <h3>History</h3>\n   <ul className='list'>\n    {transactions.map(transaction => (<Transaction key={transaction.id} transaction={transaction}/>))}\n   </ul>\n  </div>\n )\n}\n","import React, { useState, useContext }  from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\n\nexport const AddTransaction = () => {\n\n const [text, setText] = useState('');\n const [amount, setAmount] = useState(0);\n\n const { addTransaction } = useContext(GlobalContext);\n\n const onSubmit = e => {\n  e.preventDefault();\n\n  const newTransaction = {\n   id: Math.floor(Math.random() * 100000000),\n   text,\n   amount: +amount\n  }\n  addTransaction(newTransaction);\n }\n\n return (\n  <div>\n   <h3>Add new transaction</h3>\n   <form onSubmit={onSubmit} id='form'>\n    <div className='form-control'>\n     <label for='amount'>Amount <br /></label>\n     <input type='number' value={amount} onChange={(e) => setAmount(e.target.value)} id='amount' placeholder='Enter amount...' />\n    </div>\n    <div className='form-control'>\n     <label for='text'>Description</label>\n     <input type='text' value={text} onChange={(e) => setText(e.target.value)} id='text' placeholder='Enter text...' />\n    </div>\n    <button className='btn'>Add transaction</button>\n   </form>\n  </div>\n )\n}\n","import React from 'react';\nimport { Header } from './components/Header';\nimport { Balance } from './components/Balance';\nimport { IncomeExpenses } from './components/IncomeExpenses';\nimport { TransactionList } from './components/TransactionList';\nimport { AddTransaction } from './components/AddTransaction';\nimport { GlobalProvider } from './context/GlobalState';\n\nimport './App.css';\n\nfunction App() {\n  return (\n\t\t\t<GlobalProvider>\n\t\t\t\t<Header />\n\t\t\t\t<div className='container'>\n\t\t\t\t\t\t<Balance />\n\t\t\t\t\t<IncomeExpenses />\n\t\t\t\t\t<TransactionList />\n\t\t\t\t\t<AddTransaction />\n\t\t\t\t</div>\n\t\t\t</GlobalProvider>\n\t\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render( < App / > , document.getElementById('root'));"],"sourceRoot":""}